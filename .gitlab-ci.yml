stages:
  - build
  - test
  - lint
  - security

build-docker:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker-compose up -d

enter-nix-dev-shell:
  stage: build
  image: nixpkgs/nix-flakes:latest
  services:
    - docker:dind
  script:
    - nix develop .

test-service-blogtag-docker:
  stage: test
  needs:
    - build-docker
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker-compose up -d database-postgresql api-chi
    - sh scripts/test.bash api-service-blogtag

test-route-blogtag-docker:
  stage: test
  needs:
    - build-docker
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker-compose up -d database-postgresql api-chi
    - sh scripts/test.bash api-route-blogtag

linting-api-chi:
  stage: lint
  needs:
    - build-docker
  image: golangci/golangci-lint:v1.61.0-alpine
  script:
    - cd ./api-chi && golangci-lint run .

security-scan:
  stage: security
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  script:
    - trivy fs --scanners vuln --severity CRITICAL,HIGH,MEDIUM,LOW --include-dev-deps --format json -o trivy-report.json .
  artifacts:
    paths:
      - trivy-report.json
    expire_in: 2 weeks
